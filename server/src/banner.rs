use std::io::{stdout, Write as _};

/// Print the starting banner
pub fn banner() {
    stdout().lock().write_all(BANNER.as_bytes()).ok();
}

static BANNER: &str = const_format::formatcp!(
    r"
****************************************************************
*  ______    ________  ______   ______   ______                *
* /_____/\  /_______/\/_____/\ /_____/\ /_____/\    v{version} *
* \:::_ \ \ \__.::._\/\:::__\/ \::::_\/_\::::_\/_              *
*  \:\ \ \ \   \::\ \  \:\ \  __\:\/___/\\:\/___/\             *
*   \:\ \ \ \  _\::\ \__\:\ \/_/\\::___\/_\_::._\:\            *
*    \:\/.:| |/__\::\__/\\:\_\ \ \\:\____/\ /____\:\           *
*     \____/_/\________\/ \_____\/ \_____\/ \_____\/           *
*  ______   ______   ______    __   __   ______   ______       *
* /_____/\ /_____/\ /_____/\  /_/\ /_/\ /_____/\ /_____/\      *
* \::::_\/_\::::_\/_\:::_ \ \ \:\ \\ \ \\::::_\/_\:::_ \ \     *
*  \:\/___/\\:\/___/\\:(_) ) )_\:\ \\ \ \\:\/___/\\:(_) ) )_   *
*   \_::._\:\\::___\/_\: __ `\ \\:\_/.:\ \\::___\/_\: __ `\ \  *
*     /____\:\\:\____/\\ \ `\ \ \\ ..::/ / \:\____/\\ \ `\ \ \ *
*     \_____\/ \_____\/ \_\/ \_\/ \___/_(   \_____\/ \_\/ \_\/ *
*                                                              *
****************************************************************
",
    version = const_format::concatcp!(
        env!("CARGO_PKG_VERSION"),
        const_format::str_repeat!(" ", "{version}".len() - env!("CARGO_PKG_VERSION").len())
    )
);
